name: Mahezza Android CI/CD for Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # lint:
  #   name: Lint Checks
  #   runs-on:
  #     - ubuntu-latest

  #   steps:
  #   - name: Check out Git repository
  #     uses: actions/checkout@v3

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: gradle
        
  #   - name: Make gradlew executable
  #     run: chmod +x gradlew

  #   - name: Gradle clean
  #     run: ./gradlew clean

  #   - name: Run lint
  #     run: ./gradlew lint

  #   - name: Upload html test report
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: lint-report
  #       path: app/build/reports/lint-results-debug.html
        
  # unit-test:
  #   name: Unit Tests
  #   needs: [lint]
  #   runs-on:
  #     - ubuntu-latest

  #   steps:
  #   - name: Check out Git repository
  #     uses: actions/checkout@v3

  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: gradle
        
  #   - name: Make gradlew executable
  #     run: chmod +x gradlew

  #   - name: Run Unit tests
  #     run: ./gradlew test --stacktrace

  # apk-debug:
  #     name: Generate APK for Debug
  #     needs: [unit-test]
  #     runs-on:
  #       - ubuntu-latest
  
  #     steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v3
  
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: gradle
          
  #     - name: Make gradlew executable
  #       run: chmod +x gradlew

  #     - name: Assemble app debug APK
  #       run: bash ./gradlew assembleDebug --stacktrace
        
  #     - name: Upload app debug APK
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: app-debug
  #         path: app/build/outputs/apk/debug/app-debug.apk
          
  #     - name: Assemble Android Instrumentation Tests
  #       run: bash ./gradlew assembleDebugAndroidTest
        
  #     - name: Upload Android Test APK
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: app-debug-androidTest
  #         path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

  instrumentation-test:
      name: Instrumentation Tests
      # needs: [apk-debug]
      runs-on:
        - ubuntu-latest
  
      steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
  
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Make gradlew executable
        run: chmod +x gradlew

      # - name: Download Android SDK
      #   run: |
      #     wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip -O /tmp/cmdline-tools.zip
      #     unzip -q /tmp/cmdline-tools.zip -d /tmp/cmdline-tools
      #     echo "export ANDROID_HOME=/tmp/cmdline-tools" >> $GITHUB_ENV
      #     echo "export PATH=\$PATH:\$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_ENV
      #   shell: bash

      # - name: Install Android SDK components
      #   run: yes | sdkmanager --licenses && sdkmanager "platform-tools" "emulator" "platforms;android-29" "build-tools;29.0.3"

      - name: Set up Android SDK
        uses: actions/setup-android@v2
        with:
          sdk-version: '31'
          
      - name: Create and start Android Emulator
        run: |
          echo "no" | avdmanager create avd -n test-emulator -k "system-images;android-29;google_apis;x86_64"
          emulator -avd test-emulator -no-audio -no-window -gpu swiftshader_indirect -no-boot-anim &
          android-wait-for-emulator
          adb devices
        shell: bash
        
      - name: Run espresso tests
        run: ./gradlew connectedCheck

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/
